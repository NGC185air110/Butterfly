[versions]
# android
sdk-min-version = "21"
sdk-target-version = "34"
sdk-compile-version = "34"

# library
gradle = "8.1.4"
kover = "0.7.3"
detekt = "1.23.0"

ksp = "1.9.20-1.0.14"
poet = "1.11.0"
auto-service = "1.0"

# kotlin
kotlin = "1.9.20"
kotlinx-coroutines = "1.7.2"
kotlinx-serialization-json = "1.5.1"

# android
appcompat = "1.6.1"
fragment-ktx = "1.6.2"
activity-ktx = "1.8.1"
core-ktx = "1.12.0"
arch-lifecycle = "2.6.2"
arch-lifecycle-extension = "2.2.0"
hilt = "2.46.1"

# ui
material = "1.10.0"
constraint-layout = "2.1.4"

# compose
# compose compiler
compose-compiler = "1.5.5"

activity-compose = "1.8.1"
compose = "1.5.4"
compose-material3 = "1.1.2"
accompanist = "0.31.3-beta"

# http
retrofit = "2.9.0"
retrofit-kotlinx-serialization-json = "1.0.0"
okhttp-logging = "4.11.0"
coil = "2.4.0"
exoplayer = "2.19.1"

# leak
leakcanary = "2.9.1"

# season
butterfly = "1.0.1"
clarity = "1.0.6"
yasha = "1.1.4"
bracer = "1.0.7"

# test
arch-test = "2.2.0"
junit = "4.13.2"
mockk = "1.13.5"
truth = "1.1.5"
robolectric = "4.10.3"
turbine = "1.0.0"
slf4j = "2.0.7"

# android test
androidx-junit = "1.1.5"
androidx-test-core = "1.5.0"
androidx-test-runner = "1.5.2"
androidx-test-rules = "1.5.0"
espresso-core = "3.5.1"

[libraries]
# tools
kotlin-poet = { module = "com.squareup:kotlinpoet", version.ref = "poet" }
auto-service = { module = "com.google.auto.service:auto-service", version.ref = "auto-service" }


# plugin
android-gradle = { module = "com.android.tools.build:gradle", version.ref = "gradle" }
android-gradle-api = { module = "com.android.tools.build:gradle-api", version.ref = "gradle" }
kotlin-gradle-plugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }

# kotlin
kotlin-stdlib = { module = "org.jetbrains.kotlin:kotlin-stdlib-jdk8", version.ref = "kotlin" }
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin" }
kotlin-coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "kotlinx-coroutines" }
kotlin-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization-json" }

# android
appcompat = { module = "androidx.appcompat:appcompat", version.ref = "appcompat" }
core-ktx = { module = "androidx.core:core-ktx", version.ref = "core-ktx" }
activity-ktx = { module = "androidx.activity:activity-ktx", version.ref = "activity-ktx" }
fragment-ktx = { module = "androidx.fragment:fragment-ktx", version.ref = "fragment-ktx" }
constraintlayout = { module = "androidx.constraintlayout:constraintlayout", version.ref = "constraint-layout" }
material = { module = "com.google.android.material:material", version.ref = "material" }
accompanist-systemuicontroller = { module = "com.google.accompanist:accompanist-systemuicontroller", version.ref = "accompanist" }
accompanist-flowlayout = { module = "com.google.accompanist:accompanist-flowlayout", version.ref = "accompanist" }
accompanist-permission = { module = "com.google.accompanist:accompanist-permissions", version.ref = "accompanist" }

# lifecycle
lifecycle-runtime-ktx = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "arch-lifecycle" }
lifecycle-viewmodel-ktx = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "arch-lifecycle" }
lifecycle-extensions = { module = "androidx.lifecycle:lifecycle-extensions", version.ref = "arch-lifecycle-extension" }

# compose
compose-activity = { module = "androidx.activity:activity-compose", version.ref = "activity-compose" }
compose-viewmodel = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "arch-lifecycle" }
compose-lifecycle = { module = "androidx.lifecycle:lifecycle-runtime-compose", version.ref = "arch-lifecycle" }
compose-animation = { module = "androidx.compose.animation:animation", version.ref = "compose" }
compose-foundation = { module = "androidx.compose.foundation:foundation", version.ref = "compose" }
compose-material = { module = "androidx.compose.material:material", version.ref = "compose" }
compose-material-icons-core = { module = "androidx.compose.material:material-icons-core", version.ref = "compose" }
compose-material-icons-extended = { module = "androidx.compose.material:material-icons-extended", version.ref = "compose" }
compose-runtime = { module = "androidx.compose.runtime:runtime", version.ref = "compose" }
compose-runtime-livedata = { module = "androidx.compose.runtime:runtime-livedata", version.ref = "compose" }
compose-runtime-saveable = { module = "androidx.compose.runtime:runtime-saveable", version.ref = "compose" }
compose-ui = { module = "androidx.compose.ui:ui", version.ref = "compose" }
compose-ui-viewbinding = { module = "androidx.compose.ui:ui-viewbinding", version.ref = "compose" }
compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "compose" }
compose-ui-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview", version.ref = "compose" }
compose-ui-test = { module = "androidx.compose.ui:ui-test", version.ref = "compose" }
compose-ui-test-junit = { module = "androidx.compose.ui:ui-test-junit4", version.ref = "compose" }
compose-ui-test-manifest = { module = "androidx.compose.ui:ui-test-manifest", version.ref = "compose" }
compose-material3 = { module = "androidx.compose.material3:material3", version.ref = "compose-material3" }

# hilt
hilt-android = { module = "com.google.dagger:hilt-android", version.ref = "hilt" }
hilt-compiler = { module = "com.google.dagger:hilt-android-compiler", version.ref = "hilt" }

# retrofit
retrofit-core = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
retrofit-kotlin-serialization = { module = "com.jakewharton.retrofit:retrofit2-kotlinx-serialization-converter", version.ref = "retrofit-kotlinx-serialization-json" }
okhttp-logging = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okhttp-logging" }

# detekt
detekt-formatting = { module = "io.gitlab.arturbosch.detekt:detekt-formatting", version.ref = "detekt" }

# Coil
coil-kt = { module = "io.coil-kt:coil", version.ref = "coil" }
coil-kt-compose = { module = "io.coil-kt:coil-compose", version.ref = "coil" }
coil-kt-svg = { module = "io.coil-kt:coil-svg", version.ref = "coil" }

# video
exoplayer = { module = "com.google.android.exoplayer:exoplayer", version.ref = "exoplayer" }

# leak
leakcanary = { module = "com.squareup.leakcanary:leakcanary-android", version.ref = "leakcanary" }

# season
yasha = { module = "com.github.ssseasonnn:Yasha", version.ref = "yasha" }
bracer = { module = "com.github.ssseasonnn:Bracer", version.ref = "bracer" }
clarity = { module = "com.github.ssseasonnn:ClarityPotion", version.ref = "clarity" }

# test
junit4 = { module = "junit:junit", version.ref = "junit" }
kotlin-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlinx-coroutines" }
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }
mockk-agent = { module = "io.mockk:mockk-agent-jvm", version.ref = "mockk" }
truth = { module = "com.google.truth:truth", version.ref = "truth" }
robolectric = { module = "org.robolectric:robolectric", version.ref = "robolectric" }
turbine = { module = "app.cash.turbine:turbine", version.ref = "turbine" }
slf4j = { module = "org.slf4j:slf4j-nop", version.ref = "slf4j" }

# android test
core-testing = { module = "androidx.arch.core:core-testing", version.ref = "arch-test" }
hilt-testing = { module = "com.google.dagger:hilt-android-testing", version.ref = "hilt" }
androidx-junit = { module = "androidx.test.ext:junit", version.ref = "androidx-junit" }
androidx-junit-ktx = { module = "androidx.test.ext:junit-ktx", version.ref = "androidx-junit" }
androidx-test-core = { module = "androidx.test:core", version.ref = "androidx-test-core" }
androidx-test-runner = { module = "androidx.test:runner", version.ref = "androidx-test-runner" }
androidx-test-rules = { module = "androidx.test:rules", version.ref = "androidx-test-rules" }
espresso-core = { module = "androidx.test.espresso:espresso-core", version.ref = "espresso-core" }

[bundles]
season = [
    "yasha",
    "bracer",
    "clarity"
]

compose = [
    "compose-activity",
    "compose-lifecycle",
    "compose-runtime",
    "compose-viewmodel",
    "compose-ui",
    "compose-material3",
    "compose-ui-tooling",
    "compose-ui-tooling-preview"
]

kotlin = [
    "kotlin-stdlib",
    "kotlin-coroutines",
    "kotlin-serialization-json"
]
android = [
    "appcompat",
    "core-ktx",
    "activity-ktx",
    "fragment-ktx",
    "constraintlayout",
    "material",
    "lifecycle-runtime-ktx",
    "lifecycle-viewmodel-ktx",
    "accompanist-systemuicontroller"
]
retrofit = [
    "retrofit-core",
    "retrofit-kotlin-serialization",
    "okhttp-logging"
]
coil = [
    "coil-kt",
    "coil-kt-compose",
    "coil-kt-svg"
]
unit-test = [
    "junit4",
    "kotlin-coroutines-test",
    "mockk",
    "mockk-agent",
    "truth",
    "turbine",
    "slf4j"
]
android-test = [
    "core-testing",
    "compose-ui-test",
    "compose-ui-test-junit",
    "compose-ui-test-manifest",
    "androidx-junit",
    "androidx-junit-ktx",
    "androidx-test-core",
    "androidx-test-runner",
    "androidx-test-rules",
    "espresso-core",
    "mockk",
    "mockk-agent",
    "truth",
    "slf4j"
]

[plugins]
application = { id = "com.android.application", version.ref = "gradle" }
library = { id = "com.android.library", version.ref = "gradle" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
kotlin-parcelize = { id = "org.jetbrains.kotlin.plugin.parcelize", version.ref = "kotlin" }
kotlin-kover = { id = "org.jetbrains.kotlinx.kover", version.ref = "kover" }
kapt = { id = "org.jetbrains.kotlin.kapt", version.ref = "kotlin" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
hilt = { id = "com.google.dagger.hilt.android", version.ref = "hilt" }
butterfly = { id = "io.github.ssseasonnn.butterfly", version.ref = "butterfly" }